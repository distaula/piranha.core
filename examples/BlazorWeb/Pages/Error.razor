@typeparam TType
@*@page "/{slug}"*@
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Authorization;
@using Piranha;
@using Piranha.AspNetCore.Services;
@using Piranha.Models;
@using Piranha.Web;
@inject IApi Api
@inject IModelLoader ModelLoader
@inject IApplicationService AppService
@inject AuthenticationStateProvider AuthenticationState
@inject NavigationManager NavigationManager


@_fragment


@code{
    private Site _site;

    protected async Task<Site> GetSite(Guid? guid = null)
    {

        if (_site == null || guid.HasValue && guid.Value == _site.Id)
        {
            _site = await Api.Sites.GetByIdAsync(guid.GetValueOrDefault());
        }

        return _site;
    }

    protected RenderFragment<TType> _fragment;

    [Parameter] public string Slug { get; set; }

    //private async Task<RenderFragment<TType>> GetContent<TContent>() where TContent : RoutedContent, TType
    //{

    //    //var model = 
    //}

    protected override async Task OnInitializedAsync()
    {
        var response = await PageRouter.InvokeAsync(Api, new Uri(NavigationManager.Uri).LocalPath, _site.Id)
        ?? await PostRouter.InvokeAsync(Api, new Uri(NavigationManager.Uri).LocalPath, _site.Id)
        ?? await ArchiveRouter.InvokeAsync(Api, new Uri(NavigationManager.Uri).LocalPath, _site.Id)
        ?? await AliasRouter.InvokeAsync(Api, new Uri(NavigationManager.Uri).LocalPath, _site.Id);

        //var render
        //Id = response.PageId;
        var state = await AuthenticationState.GetAuthenticationStateAsync();

        switch (response)
        {

        }
        var model = await ModelLoader.GetPage<BlazorWeb.Models.TeaserPage>(response.PageId, state.User, false);
        _fragment = value => async builder =>
        {
            builder.OpenComponent<TeaserPage>(0);
            builder.AddAttribute(1, "Model", model);
            builder.CloseComponent();
        };

        //return content;



        //_fragment = await GetContent<BlazorWeb.Models.TeaserPage>();
    }
    }