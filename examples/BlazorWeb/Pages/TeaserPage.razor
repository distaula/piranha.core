@page "/teaserpage"
@page "/teaserpage/{Id:guid}"
@inherits BlazorWeb.Pages.PiranhaComponentBase<BlazorWeb.Models.TeaserPage>
@using Microsoft.AspNetCore.Authorization;
@using Piranha.AspNetCore.Models;
@using Piranha.AspNetCore.Services;
@using Microsoft.EntityFrameworkCore;
@using Piranha;


<HeroComponent Hero="@Model?.Hero" />

@if (Model?.LatestPost != null)
{
    <div class="container latest-post">
        <div class="row">
            <div class="col text-center">
                Latest news:
                <strong>@Model.LatestPost.Published.Value.ToString("yyyy-MM-dd")</strong>
                -
                <NavLink href="@Model.LatestPost.Permalink">
                    @Model.LatestPost.Title
                </NavLink>
            </div>
        </div>
    </div>
}

<TeasersComponent Teasers="@Model?.Teasers" />

<div class="container body-container">
    <div class="row justify-content-center">
        <div class="col-md-10 col-xs-12">
            @if (Model?.Blocks != null)
            {
                foreach (var block in Model.Blocks)
                {
                    <BlockComponent Block="@block" />
                }
            }
        </div>
    </div>
</div>

<QuotesComponent Quotes="@Model?.Quotes" />

@code {

    protected override async Task OnInitializedAsync()
    {
        if (Model != null && Model.IsStartPage)
        {
            using (IDb dataContext = DbFactory())
            {
                var latest = await dataContext.Posts
                    .OrderByDescending(p => p.Published)
                    .FirstOrDefaultAsync(post => post.Published <= DateTime.Now);

                if (latest != null)
                {
                    Model.LatestPost = await Api.Posts.GetByIdAsync<PostInfo>(latest.Id);
                }
            }
        }
    }

}

