@page "/teaserpage"
@page "/teaserpage/{Id:guid}"
@inherits BlazorWeb.Pages.PiranhaComponentBase<BlazorWeb.Models.TeaserPage>
@using Microsoft.AspNetCore.Authorization;
@using Piranha.AspNetCore.Models;
@using Piranha.AspNetCore.Services;
@using Microsoft.EntityFrameworkCore;
@using Piranha;
@inject IDb _db

<HeroComponent Hero="@Model?.Hero" />

@if (Model?.LatestPost != null)
{
    <div class="container latest-post">
        <div class="row">
            <div class="col text-center">
                Latest news:
                <strong>@Model.LatestPost.Published.Value.ToString("yyyy-MM-dd")</strong>
                -
                <a href="@Model.LatestPost.Permalink">@Model.LatestPost.Title</a>
            </div>
        </div>
    </div>
}

<TeasersComponent Teasers="@Model?.Teasers" />

<div class="container body-container">
    <div class="row justify-content-center">
        <div class="col-md-10 col-xs-12">
            @if (Model?.Blocks != null)
            {
                foreach (var block in Model.Blocks)
                {
                    <BlockComponent Block="@block" />
                }
            }
        </div>
    </div>
</div>

<QuotesComponent Quotes="@Model?.Quotes" />

@code {

    protected override async Task OnInitializedAsync()
    {
        if (Model != null && Model.IsStartPage)
        {
            var latest = await _db.Posts
            .Where(p => p.Published <= DateTime.Now)
            .OrderByDescending(p => p.Published)
            .Take(1)
            .Select(p => p.Id)
            .ToListAsync();

            if (latest.Any())
            {
                Model.LatestPost = await Api.Posts.GetByIdAsync<PostInfo>(latest.First());
            }
        }
    }
}