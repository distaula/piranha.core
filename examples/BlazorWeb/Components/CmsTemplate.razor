@*@inherits ComponentBase
@typeparam TItem
<nav class="navbar navbar-expand-md">
    <div class="navbar-brand">
        <a href="https://twitter.com/piranhacms" target="blank"><img src="~/assets/img/twitter.png"></a>
        <a href="https://github.com/piranhacms/piranha.core" target="blank"><img src="~/assets/img/github.png"></a>
    </div>
    <button class="navbar-toggler navbar-toggler-right collapsed" type="button" data-toggle="collapse" data-target="#mobileNavbar" aria-controls="mobileNavbar" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon">&#9776;</span>
    </button>
    <div class="navbar-collapse collapse" id="mobileNavbar">
        <ul class="justify-content-center navbar-nav mr-auto">

            @foreach (var item in SitemapItems)
            {
                if (!item.IsHidden)
                {
                    <li class="nav-item @(item.Id == PageId || item.HasChild(PageId) ? "active" : "")">
                        <NavLink class="nav-link" href="@item.Permalink">
                            @item.MenuTitle
                        </NavLink>
                    </li>
                }
            }
        </ul>
    </div>
</nav>

@code {
    [Parameter]
    public IEnumerable<SitemapItem> SitemapItems { get; set; }

    [Parameter]
    public RenderFragment<TItem> Model { get; set; }

    //[Parameter]
    //public Guid PageId { get; set; } = new Guid();

    protected async override Task OnInitializedAsync()
    {
        //await Service.InitAsync(accessor.HttpContext);

        //if (Service.Site.Sitemap != null)
        //    SitemapItems = Service.Site.Sitemap.ToArray();

        //PageId = Service.PageId;
    }
}*@