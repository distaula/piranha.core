@using Piranha.AspNetCore.Identity
@model Piranha.AspNetCore.Identity.Models.UserListModel
@inject IAuthorizationService Auth
@inject ManagerLocalizer Localizer
@{
    ViewBag.Title = "Users";
    ViewBag.MenuItem = "Users";
}

<div class="top">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">@Localizer.General["Settings"]</li>
            <li class="breadcrumb-item active" aria-current="page">Users</li>
        </ol>
    </nav>

    <div class="container-fluid">
        <div class="top-nav">
            @if ((await Auth.AuthorizeAsync(User, Piranha.AspNetCore.Identity.Permissions.UsersAdd)).Succeeded)
            {
                <a href="@Url.Action("Add")" class="btn btn-primary btn-labeled">
                    <i class="fas fa-plus"></i>@Localizer.General["Add"]
                </a>
            }
        </div>
    </div>
</div>

<div class="container-fluid">
    <table class="table table-borderless">
        <thead>
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Roles</th>
            <th class="actions one"></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>
                    <img src="@Utils.GetGravatarUrl(user.Email, 25)" alt="Gravatar for @user.Email" style="padding-right: 10px">
                    @if ((await Auth.AuthorizeAsync(User, Piranha.AspNetCore.Identity.Permissions.UsersEdit)).Succeeded)
                    {
                        <a href="@Url.Action("Edit", new { id = user.Id })">@user.UserName</a>
                    }
                    else
                    {
                        <span class="title">@user.UserName</span>
                    }
                </td>
                <td>@user.Email</td>
                <td>
                    @string.Join(", ", user.Roles)
                </td>
                <td class="actions one">
                    @if ((await Auth.AuthorizeAsync(User, Piranha.AspNetCore.Identity.Permissions.UsersDelete)).Succeeded)
                    {
                        <a class="danger" href="@Url.Action("Delete", new {id = user.Id})">
                            <span class="fas fa-trash"></span>
                        </a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
