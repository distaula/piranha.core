@model Piranha.AspNetCore.Identity.Models.UserEditModel
@inject IAuthorizationService Auth
@inject ManagerLocalizer Localizer
@{
    if (Model.User.Id != Guid.Empty)
    {
        ViewBag.Title = "Edit user";
    }
    else
    {
        ViewBag.Title = "Add user";
    }
    ViewBag.MenuItem = "Users";
}

@using (var form = Html.BeginForm("Save", "User", FormMethod.Post, new {@class = "form", role = "form", autocomplete = "off"}))
{
    @Html.HiddenFor(m => m.User.Id)

    <div class="top">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">@Localizer.General["Settings"]</li>
                <li class="breadcrumb-item" aria-current="page"><a href="@Url.Action("List")">Users</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Localizer.General["Edit"]</li>
            </ol>
        </nav>

        <div class="container-fluid">
            <div class="top-nav">
                @if ((await Auth.AuthorizeAsync(User, Piranha.AspNetCore.Identity.Permissions.UsersSave)).Succeeded)
                {
                    <button type="submit" class="btn btn-labeled btn-success pull-right">
                        <span class="btn-label">
                            <i class="fas fa-check"></i>
                        </span>
                        @Localizer.General["Save"]
                    </button>
                }
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="card">
            <div class="card-header">
                <span class="title">General information</span>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Username</label>
                            @Html.TextBoxFor(m => m.User.UserName, new {@class = "form-control small", maxlength = 128, placeholder = "The user name used to log in"})
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Email address</label>
                            @Html.TextBoxFor(m => m.User.Email, new {@class = "form-control small", type = "email", maxlength = 128, placeholder = "The email address for the user"})
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label>Roles</label>
                    <ul class="list-group">
                        @for (var n = 0; n < Model.Roles.Count(); n += 3)
                        {
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-sm-4">
                                        <div class="checkbox">
                                            <label class="mb-0">
                                                <input type="checkbox" name="SelectedRoles[]" value="@Model.Roles[n].Name" @(Model.SelectedRoles.Contains(Model.Roles[n].Name) ? "checked=checked" : "")> @Model.Roles[n].Name
                                            </label>
                                        </div>
                                    </div>
                                    @if (n + 1 < Model.Roles.Count())
                                    {
                                        <div class="col-sm-4">
                                            <div class="checkbox">
                                                <label class="mb-0">
                                                    <input type="checkbox" name="SelectedRoles[]" value="@Model.Roles[n + 1].Name" @(Model.SelectedRoles.Contains(Model.Roles[n + 1].Name) ? "checked=checked" : "")> @Model.Roles[n + 1].Name
                                                </label>
                                            </div>
                                        </div>
                                    }
                                    @if (n + 2 < Model.Roles.Count())
                                    {
                                        <div class="col-sm-4">
                                            <div class="checkbox">
                                                <label class="mb-0">
                                                    <input type="checkbox" name="SelectedRoles[]" value="@Model.Roles[n + 2].Name" @(Model.SelectedRoles.Contains(Model.Roles[n + 2].Name) ? "checked=checked" : "")> @Model.Roles[n + 2].Name
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <span class="title">Update password</span>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Password</label>
                            @Html.PasswordFor(m => m.Password, new {@class = "form-control small", maxlength = 128, placeholder = "Add new password"})
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>&nbsp;</label>
                            @Html.PasswordFor(m => m.PasswordConfirm, new {@class = "form-control small", maxlength = 128, placeholder = "Confirm new password"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}